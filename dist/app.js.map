{"version":3,"sources":["src/sketch.ts","src/util.ts","src/components/drawable.ts","src/components/movable.ts","src/components/radial-collider.ts","src/components/seeker.ts","src/components/timer.ts","src/components/health.ts","src/assemblies/player.ts","src/assemblies/seeker-enemy.ts","src/assemblies/shooter.ts","src/components/bullet.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import 'p5';\nimport * as util from './util';\n\nimport { Drawable } from './components/drawable';\nimport { Movable } from './components/movable';\nimport { RadialCollider } from './components/radial-collider';\nimport { Seeker } from './components/seeker';\nimport { Timer } from './components/timer';\nimport { Health } from './components/health';\n\nimport { Player } from './assemblies/player';\nimport { SeekerEnemy } from './assemblies/seeker-enemy';\nimport { ShooterEnemy } from './assemblies/shooter';\nimport { Bullet } from './components/bullet';\n\nconst LEVEL_WIDTH = 640;\nconst LEVEL_HEIGHT = 480;\nBullet.LEVEL_WIDTH = LEVEL_WIDTH;\nBullet.LEVEL_HEIGHT = LEVEL_HEIGHT;\n\nlet update = true;\n\nfunction init (): void {\n  const player = new Player(new Health(100), new Movable([10, 10]));\n\n  const seeker_locations:number[][] = [ [100, 100], [300, 400], [200, 500], [400, 600]];\n  seeker_locations.forEach( (loc, i) => {\n    new SeekerEnemy(loc, player.movable);\n  });\n\n  const shooter_locations:number[][] =  [ [400, 100], [10, 400]];\n  shooter_locations.forEach(\n    (loc) => {\n      new ShooterEnemy(loc, player.movable, 3);\n    }\n  );\n\n  return player;\n}\n\nconst components:Component[] = [Movable, Seeker, Timer, RadialCollider, Bullet];\nfunction update_components (): void {\n  components.forEach((component) => {component.update();});\n}\n\nfunction update_stats(p: p5, player: Player): void {\n  const width:number = 150;\n  const height:number = 50;\n  p.fill(255);\n  p.rect(640-width, 0, width, height);\n\n  p.fill(0);\n  p.textSize(16);\n  p.textAlign(p.LEFT);\n  p.text('Life: ' + player.health.current_health, 640-width, height/2);\n}\n\nvar sketch = function (p: p5) {\n  let player:Player;\n\n  p.setup = function () {\n    player = init();\n\n    p.createCanvas(640, 480);\n    p.frameRate(30);\n  }\n\n  p.draw = function () {\n    p.background(255);\n    Drawable.update();\n    if (update) {\n      update_components();\n    }\n\n    update_stats(p, player);\n    handle_input();\n  }\n\n  let handle_input = function () {\n    let player_vel:number[] = [0, 0];\n    if (p.keyIsDown(p.LEFT_ARROW)) {\n      player_vel = util.vector_addition(player_vel, [-1, 0]);\n    } else if (p.keyIsDown(p.RIGHT_ARROW)) {\n      player_vel = util.vector_addition(player_vel, [1, 0]);\n    } if (p.keyIsDown(p.UP_ARROW)) {\n      player_vel = util.vector_addition(player_vel, [0, -1]);\n    } else if (p.keyIsDown(p.DOWN_ARROW)) {\n      player_vel = util.vector_addition(player_vel, [0, 1]);\n    }\n\n    if (util.vector_length(player_vel) == 0) {\n      player.movable.vel = player_vel;\n    } else {\n      player.movable.vel = util.skalar_multiplication(\n        player_vel,\n        player.speed / util.vector_length(player_vel)\n      );\n    }\n  }\n\n  p.keyPressed = function () {\n    if (p.keyCode == 32) { // SPACEBAR\n      update = !update;\n    }\n  }\n}\n\nDrawable.p = new p5(sketch);\n","export function vector_addition (v1:number[], v2:number[]) {\n    if (v1.length != v2.length) { throw \"Vectors not of same length\"; };\n    return v1.map((el, i) => el + v2[i]);\n}\n\nexport function vector_subtraction(v1:number[], v2:number[]) {\n    if (v1.length != v2.length) { throw \"Vectors not of same length\"; };\n    return v1.map((el, i) => el - v2[i]);\n}\n\nexport function vector_length(vector:number[]) {\n    return Math.sqrt(vector.reduce((acc, val) => {return acc + val * val}, 0));\n}\n\nexport function skalar_multiplication(v1:number[], skalar:number) {\n    return v1.map((el) => skalar*el);\n}\n\nexport function remove_from_array<T>(array:T[], item:T) {\n    array.splice(array.indexOf(item) , 1);\n}\n","import p5 from './../p5';\nimport * as util from './../util';\n\nimport { Component } from './ECS';\nimport { Movable } from './movable';\n\ntype DrawFunction = (p: p5, pos:number[]) => void;\n\nexport class Drawable implements Component {\n  static p: p5;\n  static entities:Drawable[] = [];\n\n  constructor (\n    public drawing:DrawFunction,\n    public movable:Movable\n  ) {\n    Drawable.entities.push(this);\n  }\n\n  static update () {\n    Drawable.entities.forEach( (drawable) => {\n      drawable.drawing(drawable.movable.pos);\n    });\n  }\n\n  destructor () {\n    this.movable.destructor();\n\n    util.remove_from_array(Drawable.entities, this);\n  }\n}\n","import { Component } from './ECS';\nimport * as util from './../util';\n\nexport class Movable implements Component {\n  static entities:Movable[] = [];\n\n  constructor (\n    public pos:number[] = [0, 0],\n    public vel:number[] = [0, 0]\n  ) {\n    Movable.entities.push(this);\n  }\n\n  static update() {\n    Movable.entities.forEach( (movable:Movable, i:number) => {\n      Movable.entities[i].pos = util.vector_addition(movable.pos, movable.vel);\n    });\n  }\n\n  destructor () {\n    util.remove_from_array(Movable.entities, this);\n  }\n}\n","import * as util from './../util';\n\nimport { Component } from './ECS';\nimport { Movable } from './movable';\n\nexport class RadialCollider implements Component {\n  static entities:RadialCollider[] = [];\n\n  constructor (\n    public radius:number,\n    public movable:Movable,\n    public call_back:Function,\n    public identifier:string\n  ) {\n    RadialCollider.entities.push(this);\n  }\n\n  static update () {\n    RadialCollider.entities.forEach((c1) => {\n      RadialCollider.entities.forEach( (c2) => {\n        if (c1 == c2) { return } // Prevent measuring distance to self.\n\n        const distance:number = util.vector_length(util.vector_subtraction(c1.movable.pos, c2.movable.pos));\n        if (distance < c1.radius + c2.radius ) {\n          c1.call_back(c2.identifier);\n          c2.call_back(c1.identifier);\n        }\n      });\n    });\n  }\n\n  destructor () {\n    util.remove_from_array(RadialCollider.entities, this)\n  }\n}\n","import * as util from './../util';\n\nimport { Component } from './ECS';\nimport { Movable } from './movable';\n\nexport class Seeker implements Component {\n  static entities:Seeker[] = [];\n\n  constructor (\n    public movable:Movable,\n    public speed:number,\n    public goal:Movable\n  ) {\n    Seeker.entities.push(this);\n  }\n\n  static update () {\n   Seeker.entities.forEach((seeker) => {\n      if (seeker.movable.pos == seeker.goal.pos ) {\n        seeker.movable.vel = [0, 0];\n      } else {\n        let diff:number[]  = util.vector_subtraction(seeker.goal.pos, seeker.movable.pos);\n        seeker.movable.vel = util.skalar_multiplication(diff, seeker.speed/util.vector_length(diff));\n      }\n    });\n  }\n\n  destructor () {\n    util.remove_from_array(Seeker.entities, this);\n  }\n}\n","import * as util from './../util';\nimport { Component } from './ECS';\n\nexport class Timer implements Component {\n  static entities:Timer[] = [];\n  public last:number;\n\n  constructor (\n    public callback:() => void,\n    public duration:number,\n    public repetitions:number,\n    public repetition_callback:() => void = () => {}\n  ) {\n    Timer.entities.push(this);\n    this.last = Date.now();\n  }\n\n  static update () {\n    Timer.entities.forEach((timer) => {\n      if (Date.now() - timer.last > timer.duration) {\n        timer.last = Date.now();\n        if (timer.repetitions != 0) {\n          timer.callback();\n        } else {\n          timer.repetition_callback()\n          timer.destructor();\n        }\n\n        if (timer.repetitions != -1 ) {\n          timer.repetitions -= 1;\n        }\n      }\n    });\n  }\n\n  destructor() {\n    util.remove_from_array(Timer.entities, this);\n  }\n}\n","import * as util from './../util';\nimport { Component } from './ECS';\n\nexport class Health implements Component {\n  public current_health:number;\n  static entities:Health[] = [];\n\n  constructor (\n    public max_health:number,\n    public on_death:() => void = () => {}\n  ) {\n    Health.entities.push(this);\n    this.current_health = max_health;\n  }\n\n  damage (damage:number) {\n    this.current_health -= damage;\n    if (this.current_health <= 0) {\n      this.on_death();\n    }\n  }\n\n  destructor() {\n    util.remove_from_array(Health.entities, this);\n  }\n}\n","import { Movable } from './../components/movable';\nimport { RadialCollider } from './../components/radial-collider';\nimport { Drawable } from './../components/drawable';\nimport { Health } from './../components/health';\n\nexport class Player {\n  public movable:Movable;\n  public life:number;\n  public speed:number;\n  public drawable:Drawable;\n  public collider:RadialCollider;\n\n  constructor (public health:Health, public movable:Movable) {\n    this.movable = new Movable([10, 20], [0, 0]);\n    this.speed = 10;\n\n    this.collider = new RadialCollider(\n      10,\n      this.movable,\n      (id) => {\n        if (id == 'bullet') {\n          this.health.damage(1);\n        } else if ( id == 'seeker' ) {\n          this.health.damage(10);\n        }\n      },\n      'player'\n    );\n\n    this.drawable = new Drawable (\n      (pos) => {\n        Drawable.p.fill(0);\n        Drawable.p.ellipse(pos[0], pos[1], 10, 10);\n      },\n      this.movable\n    );\n  }\n}\n","import { Movable } from './../components/movable';\nimport { Drawable } from './../components/drawable';\nimport { RadialCollider } from './../components/radial-collider';\nimport { Seeker } from './../components/seeker';\n\nexport class SeekerEnemy {\n  public movable:Movable;\n  public seeker:Seeker;\n  public drawable:Drawable;\n  public collider:RadialCollider;\n\n  constructor (starting_location:number[], goal:Movable) {\n    this.movable = new Movable(starting_location);\n\n    this.seeker = new Seeker(this.movable, 2, goal);\n    this.drawable = new Drawable(\n      (pos) => {\n        Drawable.p.fill(120);\n        Drawable.p.ellipse(pos[0], pos[1], 5, 5);\n      },\n      this.movable\n    );\n\n    this.collider = new RadialCollider(\n      5,\n      this.movable,\n      (identifier) => {\n        if (identifier == 'player') {\n          this.destructor();\n        } else if (identifier == 'bullet') {\n          this.destructor();\n        }\n      },\n      'seeker'\n    );\n  }\n\n  destructor () {\n    this.movable.destructor();\n    this.seeker.destructor();\n    this.collider.destructor();\n    this.drawable.destructor();\n  }\n}\n","import { Movable } from './../components/movable';\nimport { RadialCollider } from './../components/radial-collider';\nimport { Drawable } from './../components/drawable';\nimport { Timer } from './../components/timer';\nimport { Bullet } from './../components/bullet';\n\nexport class ShooterEnemy {\n  public movable:Movable;\n  public timer:Timer;\n  public collider:RadialCollider;\n  public drawable:Drawable;\n\n  constructor(\n    starting_position:number[],\n    public goal:Movable,\n    public bullet_speed:number\n  ) {\n    this.movable = new Movable(starting_position);\n\n    this.timer = new Timer(\n      () => {this.shoot_bullet();},\n      1000,\n      -1\n    );\n\n    this.collider = new RadialCollider(\n      15,\n      this.movable,\n      (identifier) => {\n        if (identifier == 'player') {\n          this.destructor();\n        }\n      },\n      'shooter'\n    );\n\n    this.drawable = new Drawable(\n      (pos) => {\n        Drawable.p.fill(120, 120, 120);\n        Drawable.p.ellipse(pos[0], pos[1], 15, 15);\n      },\n      this.movable\n    );\n  }\n\n  shoot_bullet () {\n    new Bullet(this.movable.pos, this.goal.pos, this.bullet_speed);\n  }\n\n  destructor () {\n    this.movable.destructor();\n    this.collider.destructor();\n    this.drawable.destructor();\n    this.timer.destructor();\n  }\n}\n","import * as util from './../util';\nimport { Component } from './ECS';\n\nimport { Movable } from './movable';\nimport { RadialCollider } from './radial-collider';\nimport { Drawable } from './drawable';\n\nexport class Bullet implements Component {\n  public movable:Movable;\n  public collider:RadialCollider;\n  public drawable:Drawable;\n  public static entities:Bullet[] = [];\n  static LEVEL_WIDTH:number;\n  static LEVEL_HEIGHT:number;\n\n  constructor (\n    public starting_location:number[],\n    public goal:number[],\n    public speed:number,\n    public radius:number = 3,\n  ) {\n    this.movable = new Movable(starting_location);\n    const direction:number[] = util.vector_subtraction(goal, starting_location);\n    this.movable.vel = util.skalar_multiplication(direction, speed/util.vector_length(direction));\n\n    this.collider = new RadialCollider(\n      this.radius,\n      this.movable, (identifier) => {\n        if (identifier == 'player') {\n          this.destructor();\n        }\n      },\n      'bullet'\n    );\n\n    this.drawable = new Drawable(\n      (pos) => {\n        Drawable.p.fill(0, 0, 120);\n        Drawable.p.ellipse(pos[0], pos[1], this.radius, this.radius);\n      },\n      this.movable\n    );\n  }\n\n  destructor () {\n    this.drawable.destructor();\n    this.movable.destructor();\n    this.collider.destructor();\n  }\n\n  static update () {\n    Bullet.entities.forEach( (bullet) => {\n      const x:number = bullet.movable.pos[0];\n      const y:number = bullet.movable.pos[1];\n      if (\n        0 > x ||\n        x > this.LEVEL_WIDTH ||\n        0 > y ||\n        y > this.LEVEL_HEIGHT\n      ) {\n        bullet.destructor();\n      }\n    });\n  }\n}\n"]}